<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<TargetEndpoint name="covid-19-test-result-target">
  <FaultRules>
    <FaultRule name="RaiseFault.MissingNHSDUserIdentity">
        <Condition>error.message Equals "Failed to Resolve Variable : policy(AssignMessage.AddUserIdHeader) variable(accesstoken.id_token)"</Condition>
        <Step>
            <Name>RaiseFault.MissingNHSDUserIdentity</Name>
        </Step>
    </FaultRule>
    <FaultRule name="access_token_invalid">
      <Step>
        <Name>RaiseFault.InvalidAccessToken</Name>
      </Step>
      <Condition>oauthV2.OauthV2.VerifyAccessToken.failed</Condition>
    </FaultRule>
    <FaultRule name="allow_raisefaults">
        <!-- prevent the DefaultFaultRule from executing when RaiseFault is used in a flow -->
        <Step>
            <Name>AssignMessage.CatchallErrorMessage</Name>
            <Condition>(fault.name NotEquals "RaiseFault")</Condition>
        </Step>
        <Condition>(fault.name Equals "RaiseFault")</Condition>
    </FaultRule>
  </FaultRules>
  <PreFlow>
        <Request>
            <Step>
                <Name>OauthV2.VerifyAccessToken</Name>
            </Step>
            <!-- If the token was retrieved via token exchange, assign the jwt from the token attributes to the NHSD-User-Identity Header -->
            <Step>
              <Name>AssignMessage.AddUserIdHeaderIdToken</Name>
              <Condition>accesstoken.grant_type = "urn:ietf:params:oauth:grant-type:token-exchange"</Condition>
            </Step>
            <Step>
                <Name>AssignMessage.AddUserIdHeader</Name>
                <Condition>accesstoken.auth_grant_type == "token_exchange"</Condition>
            </Step>
            <Step>
                <Name>RaiseFault.MissingNHSDUserIdentity</Name>
                <Condition>(accesstoken.auth_grant_type == "token_exchange") and ((request.header.NHSD-User-Identity Is null) or (request.header.NHSD-User-Identity Equals ""))</Condition>
            </Step>
            <Step>
                <Name>AccessEntity.GetApp</Name>
            </Step>
            <Step>
                <Name>ExtractVariables.GetProofingLevel</Name>
            </Step>
            <Step>
                <Name>Javascript.AddClientRPDetailsHeader</Name>
            </Step>
            <Step>
                <Name>Quota</Name>
            </Step>
            <Step>
                <Name>SpikeArrest</Name>
            </Step>
        </Request>
    </PreFlow>
  <Flows>
    <Flow name="mapApigeeParametersIntoHeader">
      <Request>
        <Step>
          <Name>DecodeJWT.FromExternalIdToken</Name>
        </Step>
        <Step>
          <Name>AssignMessage.AddAccessTokenIdHeader</Name>
        </Step>
        <Step>
          <Name>AssignMessage.AddApigeeClientIdHeader</Name>
        </Step>
        <Step>
          <Name>AssignMessage.AddDeveloperAppIdHeader</Name>
        </Step>
        <Step>
          <Name>AssignMessage.AddDeveloperAppNameHeader</Name>
        </Step>
        <Step>
          <Name>AssignMessage.AddNhsdCorrelationIdHeader</Name>
        </Step>
        <Step>
          <Name>AssignMessage.AddProxyClientIpHeader</Name>
        </Step>
        <Step>
          <Name>AssignMessage.AddUserIdHeaderIdToken</Name>
          <Condition>accesstoken.grant_type = "urn:ietf:params:oauth:grant-type:token-exchange"</Condition>
        </Step>
        <Step>
          <Name>AssignMessage.AddUserIdHeader</Name>
          <Condition>accesstoken.grant_type != "urn:ietf:params:oauth:grant-type:token-exchange"</Condition>
        </Step>
        <Step>
          <Name>AssignMessage.AddNhsSystemHeader</Name>
        </Step>
      </Request>
      <Response/>
    </Flow>
  </Flows>
  <HTTPTargetConnection>
    <SSLInfo>
      <Enabled>true</Enabled>
    </SSLInfo>
    <LoadBalancer>
      <Server name="covid19-test-results" />
    </LoadBalancer>
  </HTTPTargetConnection>
</TargetEndpoint>
